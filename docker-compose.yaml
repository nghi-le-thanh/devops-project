version: "3.8"
services:
    # rabbitmq:
    #     image: rabbitmq:3-management
    #     container_name: rabbitmq
    #     ports:
    #         - 5672:5672
    #         - 15672:15672
    #     networks: 
    #         - app-networks

    # observer:
    #     container_name: observer
    #     build: ./observer
    #     volumes:
    #         - ./observer:/observer
    #         - share-log:/observer/log
    #     depends_on: 
    #         - rabbitmq
    #     links:
    #         - rabbitmq
    #     networks:
    #         - app-networks
    #     environment: 
    #         - MESSAGE_QUEUE=amqp://rabbitmq

    # original:
    #     container_name: original
    #     build: ./original
    #     volumes:
    #         - ./original:/original
    #         - share-log:/original/log
    #         - state-db:/original/state-db
    #     restart: on-failure
    #     depends_on: 
    #         - rabbitmq
    #     links:
    #         - rabbitmq
    #     networks:
    #         - app-networks
    #     environment: 
    #         - MESSAGE_QUEUE=amqp://rabbitmq

    # intermediate:
    #     container_name: intermediate
    #     build: ./intermediate
    #     volumes:
    #         - ./intermediate:/intermediate
    #     restart: on-failure
    #     depends_on: 
    #         - rabbitmq
    #     links:
    #         - rabbitmq
    #     networks:
    #         - app-networks
    #     environment: 
    #         - MESSAGE_QUEUE=amqp://rabbitmq
    
    httpenv:
        container_name: httpenv
        build: ./httpenv
        ports:
            - "8080:8080"
        volumes:
            - ./httpenv:/httpenv
            - share-log:/httpenv/log:ro
            - state-db:/httpenv/state-db:ro
        # depends_on: 
        #     - rabbitmq
        # links:
        #     - rabbitmq
        networks:
            - app-networks
        environment: 
            - MESSAGE_QUEUE=amqp://rabbitmq

volumes:
    nodemodules: 
    share-log:
    state-db:

networks: 
    app-networks:
        driver: bridge