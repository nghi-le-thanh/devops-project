version: "3.8"
services:
    rabbitmq:
        image: rabbitmq:3-management
        container_name: rabbitmq
        ports:
            - 5672:5672
            - 15672:15672
        networks: 
            - app-networks

    observer:
        container_name: observer
        build: ./observer
        volumes:
        #     - ./observer:/observer
            # - nodemodules:/observer/node_modules
            - share-log:/observer
        depends_on: 
            - rabbitmq
        links:
            - rabbitmq
        networks:
            - app-networks
        environment: 
            - MESSAGE_QUEUE=amqp://rabbitmq

    original:
        container_name: original
        build: ./original
        # volumes:
        #     - ./original:/original
            # - nodemodules:/original/node_modules
        restart: on-failure
        depends_on: 
            - rabbitmq
        links:
            - rabbitmq
        networks:
            - app-networks
        environment: 
            - MESSAGE_QUEUE=amqp://rabbitmq

    intermediate:
        container_name: intermediate
        build: ./intermediate
        # volumes:
            # - ./intermediate:/intermediate
            # - nodemodules:/intermediate/node_modules
        restart: on-failure
        depends_on: 
            - rabbitmq
        links:
            - rabbitmq
        networks:
            - app-networks
        environment: 
            - MESSAGE_QUEUE=amqp://rabbitmq
    
    httpenv:
        container_name: httpenv
        build: ./httpenv
        ports:
            - "8080:8080"
        volumes:
            # - ./httpenv:/httpenv
            # - nodemodules:/httpenv/node_modules
            - share-log:/observer:ro
        networks:
            - app-networks

volumes:
    nodemodules: 
    share-log:

networks: 
    app-networks:
        driver: bridge